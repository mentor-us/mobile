name: Deploy to Google Play

on:
  push:
    branches:
      - "feature/MU-55-Fix-cicd-deploy-gg-play"
      - develop

  workflow_dispatch: 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./src"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true 
      
      - name: Install Fastlane
        run: |
          bundle install
          bundle update fastlane

      - name: Create Google Services JSON File
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.MENTORUS_MOBILE_JSON_KEY }}
        run: echo $GOOGLE_SERVICES_JSON | base64 -di > ./android/app/mentorus-mobile.json

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Get Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Get Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew
      
      # - name: Build Android App Bundle Release
      #   run: yarn android:fastlane:buildRelease
        # env: 
        #   ANDROID_KEYSTORE_PASSWORD: ${{secrets.KEY_PASSWORD }}
        #   ANDROID_KEYSTORE_ALIAS: ${{ secrets.KEY_ALIAS }}
        
      - name: Build Android App Bundle Release
        env: 
          ANDROID_KEYSTORE_PASSWORD: ${{secrets.KEY_PASSWORD }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          cp ./.env.prod ./.env
          cd android 
          gradlew bundleRelease -Pandroid.injected.signing.store.file=app/Mentorus_2023.jks -Pandroid.injected.signing.store.password=$ANDROID_KEYSTORE_PASSWORD -Pandroid.injected.signing.key.alias=$ANDROID_KEYSTORE_ALIAS -Pandroid.injected.signing.key.password=$ANDROID_KEYSTORE_PASSWORD

      - name: Upload AAB to Google Play
        run: yarn android:fastlane:uploadRelease
        