default_platform(:android)

platform :android do
    desc "Validate Google Play json key"
    lane :validate_key do
        validate_play_store_json_key(
            json_key: './android/app/mentorus-mobile.json'
        )
    end
    desc "Build apk release for the Android production"
    lane :release do
        gradle(task: 'assemble', build_type: 'Release', project_dir: 'android/')
    end

    desc "Build aab release for the Android production"
    lane :release_aab do
        gradle(
            task: "bundle",
            build_type: "Release",
            project_dir: 'android/',
            print_command_output: true,
            print_command: true,
            # properties: {
            #     "android.injected.signing.store.file" => ENV['ANDROID_KEYSTORE_FILE'],
            #     "android.injected.signing.store.password" => ENV['ANDROID_KEYSTORE_PASSWORD'],
            #     "android.injected.signing.key.alias" => ENV['ANDROID_KEYSTORE_ALIAS'],
            #     "android.injected.signing.key.password" => ENV['ANDROID_KEYSTORE_PASSWORD']
            # }
        )
    end

    desc "Deploy internal Google Play store"
    lane :internal do
        upload_to_play_store(
            track: 'internal',
            json_key: ENV['PLAY_STORE_JSON_KEY'],
            aab: ENV['PLAY_STORE_AAB_FILE'],
            package_name: ENV['PLAY_STORE_PACKAGE_NAME'],
            skip_upload_metadata: true,
            skip_upload_images: true,
            skip_upload_screenshots: true,
        )
    end

    desc "Deploy production Google Play store"
    lane :deploy do
        upload_to_play_store(
            track: 'production',
            json_key: ENV['PLAY_STORE_JSON_KEY'],
            aab: ENV['PLAY_STORE_AAB_FILE'],
            package_name: ENV['PLAY_STORE_PACKAGE_NAME'],
            skip_upload_metadata: true,
            skip_upload_images: true,
            skip_upload_screenshots: true,
        )
    end
end